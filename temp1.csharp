[{"nl_num": [3, 4044, 6479, 2848, 2245, 927, 3549, 3071, 3874, 2499, 2848, 6732, 5950, 3044, 2660, 959, 3627, 4], "code_num": [20915, 151, 13206, 23971], "code": "SqlConnection.InfoMessage", "id": "2426759", "code_sizes": 4}, {"nl_num": [3, 3988, 1179, 5823, 902, 2848, 4289, 3472, 2083, 2211, 489, 2211, 840, 5475, 1323, 2848, 4195, 4], "code_num": [20716, 151, 23339, 7864, 14735, 151, 21031, 9822, 28216, 22958, 26985, 9350, 151, 13109, 9822, 18661, 18661, 21445, 23971], "code": "dateTimePicker.Value = DateTime.Parse(reader[\"Date\"].ToString());", "id": "16774261", "code_sizes": 19}, {"nl_num": [3, 895, 4415, 787, 5106, 2173, 765, 1284, 92, 2, 2334, 4], "code_num": [18044, 9822, 6225, 16120, 6134, 17889, 151, 2, 18661, 24478, 23282, 151, 5997, 151, 29165, 9822, 16120, 18661, 21445, 10804, 23971], "code": "foreach (string s in PrinterSettings.InstalledPrinters)\\n{\\n    comboBox1.Items.Add(s);\\n}", "id": "10704284", "code_sizes": 21}, {"nl_num": [3, 7299, 927, 6397, 1486, 4], "code_num": [27920, 151, 4403, 151, 2156, 151, 26221, 9822, 18661, 21445, 23971], "code": "System.Diagnostics.Process.GetProcesses();", "id": "3263407", "code_sizes": 11}, {"nl_num": [3, 5809, 2211, 3988, 1179, 4451, 6528, 529, 6468, 2848, 890, 3509, 4048, 6528, 1608, 4], "code_num": [11846, 14541, 7864, 20918, 151, 28528, 9822, 26985, 18661, 21445, 31243, 9822, 3746, 20958, 6134, 14541, 151, 6236, 9822, 18661, 28243, 20958, 22958, 26985, 9350, 18661, 151, 17619, 9822, 18661, 21445, 23971], "code": "var collection = _db.GetCollection(\"employees\");\\nreturn (from p in collection.AsQueryable()\\n         select p[\"FullName\"]).toList();", "id": "5889197", "code_sizes": 32}, {"nl_num": [3, 807, 5520, 4048, 1913, 325, 4], "code_num": [27385, 151, 2, 9822, 2, 151, 3592, 13818, 9822, 21890, 7864, 16682, 27385, 151, 2, 9822, 21890, 18661, 18661, 13818, 17379, 18661, 21445, 23971], "code": "context.BeginSaveChangesWithRetries(SaveChangesOptions.Batch,\\n    (asyncResult => context.EndSaveChangesWithRetries(asyncResult)),\\n    null);", "id": "13769081", "code_sizes": 24}, {"nl_num": [3, 7051, 927, 4325, 1314, 6646, 2, 6268, 987, 7086, 2848, 6575, 6237, 4], "code_num": [11846, 11992, 7864, 3746, 29581, 6134, 4092, 18062, 29581, 20389, 21691, 24478, 29581, 151, 7579, 13818, 29581, 151, 8625, 10804, 749, 3800, 28243, 3800, 151, 13868, 9822, 18661, 21445, 11846, 4748, 7864, 3746, 29581, 6134, 2, 151, 17453, 9822, 554, 7864, 16682, 554, 151, 6449, 18661, 18062, 29581, 20389, 21691, 24478, 29581, 151, 7579, 13818, 29581, 151, 8625, 10804, 749, 3800, 28243, 3800, 151, 13868, 9822, 18661, 21445, 23971], "code": "var result = from c in contacts\\n                 group c by new { c.firstname, c.lastname } into g\\n                 select g.ToList();\\n\\n    var result1 = from c in companyList.SelectMany(company => company.Contacts)\\n                  group c by new { c.firstname, c.lastname } into g\\n                  select g.ToList();", "id": "10626905", "code_sizes": 69}, {"nl_num": [3, 895, 2082, 6748, 4451, 2173, 5794, 6510, 1918, 4048, 2848, 3071, 3471, 6464, 2173, 1964, 6468, 2848, 2, 4660, 3627, 4], "code_num": [26285, 30504, 24698, 16682, 2, 7864, 9822, 3746, 2, 6134, 905, 151, 2, 18062, 2, 20389, 2, 151, 8349, 749, 3800, 19257, 3800, 151, 7785, 9822, 18661, 18916, 28243, 3800, 151, 18081, 18661, 151, 1498, 9822, 23474, 18661, 21445, 23971], "code": "IEnumerable<int> top3ProductIds = (from btp in entities.BasketToProduct\\n                                   group btp by btp.ProductId into g\\n                                   orderby g.Count() descending\\n                                   select g.Key).Take(3);", "id": "3334229", "code_sizes": 40}, {"nl_num": [3, 3988, 1179, 2945, 2334, 361, 1339, 6402, 6479, 2848, 2245, 927, 3263, 7351, 1323, 2643, 6404, 2660, 6270, 3812, 3554, 3616, 3627, 4], "code_num": [12643, 2017, 25121, 9822, 6225, 22958, 9350, 25079, 18661, 24478, 2, 6936, 7864, 21691, 2, 9822, 18661, 21445, 6936, 151, 2, 7864, 26985, 21445, 6936, 151, 2, 7864, 26985, 21445, 6936, 151, 2, 9822, 26985, 18661, 21445, 19835, 9822, 24698, 3560, 7864, 23474, 21445, 3560, 30504, 6936, 151, 2, 9822, 18661, 21445, 3560, 14400, 18661, 24478, 6936, 151, 2, 9822, 3560, 13818, 2, 151, 2, 13818, 26985, 5013, 3560, 5013, 26985, 18661, 21445, 10804, 27920, 151, 4403, 151, 2156, 151, 11218, 9822, 26985, 18661, 21445, 10804, 23971], "code": "static void Main(string[] args)\\n    {\\n        // Create an instance of Bytescout.PDFRenderer.RasterRenderer object and register it.\\n        RasterRenderer renderer = new RasterRenderer();\\n        renderer.RegistrationName = \"demo\";\\n        renderer.RegistrationKey = \"demo\";\\n\\n        // Load PDF document.\\n        renderer.LoadDocumentFromFile(\"multipage.pdf\");\\n\\n        for (int i = 0; i < renderer.GetPageCount(); i++)\\n        {\\n            // Render first page of the document to BMP image file.\\n            renderer.RenderPageToFile(i, RasterOutputFormat.BMP, \"image\" + i + \".bmp\");\\n        }\\n\\n        // Open the first output file in default image viewer.\\n        System.Diagnostics.Process.Start(\"image0.bmp\");\\n    }", "id": "11504721", "code_sizes": 87}, {"nl_num": [3, 895, 927, 3263, 894, 6237, 6468, 2837, 927, 2848, 4086, 3627, 4], "code_num": [11846, 11851, 7864, 31562, 151, 31071, 9822, 9822, 29331, 13818, 6658, 18661, 7864, 16682, 29331, 5013, 26985, 5013, 6658, 18661, 21445, 23971], "code": "var temp = words.Aggregate((x, y) => x + \" \" + y);", "id": "22132901", "code_sizes": 22}, {"nl_num": [3, 3624, 2284, 7408, 4048, 6250, 325, 3471, 6464, 2029, 7408, 4], "code_num": [20814, 151, 12005, 151, 29165, 9822, 26985, 13818, 9224, 9822, 15077, 18661, 18661, 151, 22976, 7864, 26985, 21445, 23971], "code": "dt.Columns.Add(\"MyDate\", GetType(Date)).Expression = \"SUBSTRING(strDateField,5,2)+'/'+SUBSTRING(strDateField,7,2)+'/'+SUBSTRING(strDateField,1,4)\";", "id": "30318206", "code_sizes": 19}, {"nl_num": [3, 5779, 89, 735, 5184, 6810, 808, 3065, 7086, 2848, 1850, 4], "code_num": [26309, 27600, 20560, 24478, 22469, 12643, 24698, 2, 21445, 26309, 20560, 9822, 18661, 24478, 14400, 2, 21445, 10804, 10804, 23971], "code": "public class C\\n{\\n  private static int numInstances;\\n  public C() {\\n    ++numInstances;\\n    // and whatever else is needed\\n  }\\n}", "id": "10183441", "code_sizes": 20}, {"nl_num": [3, 895, 927, 2656, 2848, 3379, 4094, 7086, 6781, 4652, 2660, 3988, 1179, 3627, 4], "code_num": [312, 2, 23474, 23971], "code": "\\rdblquote  0xD3", "id": "16313062", "code_sizes": 4}, {"nl_num": [3, 895, 2082, 787, 4451, 2173, 1192, 4875, 6468, 1480, 2313, 3627, 4], "code_num": [27600, 24541, 24478, 12643, 2017, 25121, 9822, 6225, 22958, 9350, 25079, 18661, 24478, 26930, 151, 18725, 9822, 2, 9822, 26985, 18661, 18661, 21445, 26930, 151, 18725, 9822, 2, 9822, 26985, 18661, 18661, 21445, 10804, 12643, 6225, 2, 9822, 6225, 4729, 18661, 24478, 6225, 2, 7864, 27438, 151, 15157, 9822, 26985, 13818, 3115, 151, 305, 9822, 17828, 151, 28793, 13818, 10694, 151, 18089, 18661, 18661, 21445, 31243, 2955, 151, 20494, 9822, 4729, 13818, 2, 18661, 151, 23339, 21445, 10804, 10804, 23971], "code": "class Program\\n{\\n    static void Main(string[] args)\\n    {\\n        Console.WriteLine(ExtractPath(@\"C:\\Temp\\X\\2012\\08\\27\\18\\35\\wy32dm1q.qyt\"));\\n        Console.WriteLine(ExtractPath(@\"D:\\Temp\\X\\Y\\2012\\08\\27\\18\\36\\tx84uwvr.puq\"));\\n    }\\n\\n    static string ExtractPath(string fullPath)\\n    {\\n        string regexconvention = String.Format(@\"\\d{{4}}\\u{0:X4}(\\d{{2}}\\u{0:X4}){{4}}\\w{{8}}.\\w{{3}}\", Convert.ToInt32(Path.DirectorySeparatorChar, CultureInfo.InvariantCulture));\\n\\n        return Regex.Match(fullPath, regexconvention).Value;\\n    }\\n}", "id": "12199600", "code_sizes": 80}, {"nl_num": [3, 895, 2379, 787, 599, 2848, 6221, 6468, 1646, 7086, 2848, 735, 927, 735, 1110, 3627, 4], "code_num": [31243, 20808, 151, 2, 151, 29780, 9822, 3800, 7864, 16682, 3800, 151, 2, 28597, 2, 18661, 151, 2, 151, 6730, 9822, 16120, 7864, 16682, 16120, 151, 18496, 18661, 151, 13868, 9822, 18661, 21445, 23971], "code": "return db.GradeParaleloes.Single(g => g.GradeParaleloId == gradeParaleloId)\\n                         .GradeStudents.Select(s => s.Student).ToList();", "id": "5622166", "code_sizes": 34}, {"nl_num": [3, 895, 2082, 787, 637, 3635, 148, 6268, 7291, 2848, 5971, 290, 3932, 5921, 2848, 4331, 5823, 1544, 1314, 2660, 1903, 3988, 1179, 5674, 3627, 4], "code_num": [11846, 21711, 7864, 1099, 151, 3689, 9822, 26985, 18661, 21445, 21668, 12861, 7864, 26980, 151, 11091, 9822, 21711, 18661, 21445, 12861, 151, 8551, 7864, 9221, 21445, 12861, 151, 14682, 151, 19138, 9822, 26985, 18661, 21445, 23971], "code": "var type = Type.GetTypeFromProgID(\"Word.Application\");\\ndynamic word = Activator.CreateInstance(type);\\nword.Visible = true;\\nword.Documents.Open(@\"C:\\test.docx\");", "id": "10602064", "code_sizes": 36}, {"nl_num": [3, 895, 2379, 787, 4758, 4739, 4537, 3960, 4048, 4739, 335, 3627, 4], "code_num": [15697, 2, 7864, 2, 151, 13806, 9822, 29993, 7864, 16682, 6765, 151, 27281, 9822, 13335, 7864, 16682, 29993, 151, 17112, 28597, 13335, 151, 5099, 8024, 29993, 151, 29371, 28597, 13335, 151, 29371, 18661, 18661, 21445, 23971], "code": "bool RfcEqualsAfd=rfc.All(q=>\\n                         afd.Any(a=>\\n                                q.Response==a.Correct && \\n                                q.AnswerId==a.AnswerId\\n                                )\\n                         );", "id": "18864209", "code_sizes": 36}, {"nl_num": [3, 895, 2964, 4739, 689, 2660, 5359, 6268, 3231, 4], "code_num": [22469, 2017, 17188, 9822, 11968, 26914, 13818, 16987, 17524, 18661, 24478, 19835, 9822, 24698, 3560, 7864, 23474, 21445, 3560, 30504, 14623, 151, 5997, 151, 7785, 21445, 3560, 14400, 18661, 24478, 6139, 9822, 14623, 151, 4110, 9822, 3560, 18661, 18661, 24478, 6225, 25388, 7864, 9822, 6225, 18661, 14623, 151, 5997, 22958, 3560, 9350, 21445, 6139, 9822, 25388, 28597, 26985, 18661, 24478, 2493, 151, 435, 9822, 18661, 21445, 2493, 151, 30611, 9822, 18661, 21445, 10804, 6139, 9822, 25388, 28597, 26985, 18661, 24478, 2491, 151, 435, 9822, 18661, 21445, 2491, 151, 30611, 9822, 18661, 21445, 10804, 10804, 10804, 23971], "code": "private void button1_Click(object sender, EventArgs e)\\n        {\\n\\n            for (int i = 0; i < checkedListBox1.Items.Count; i++)\\n            {\\n                if (checkedListBox1.GetItemChecked(i))\\n                {\\n                    string str = (string)checkedListBox1.Items[i];\\n                    if(str ==  \"rtb1\")\\n                    {\\n                      richTextBox1.Clear();\\n                      richTextBox1.Focus();\\n                    }\\n                     if(str ==  \"rtb2\")\\n                    {\\n                       richTextBox2.Clear();\\n                       richTextBox2.Focus();\\n                    }\\n                }\\n            }", "id": "22895074", "code_sizes": 96}, {"nl_num": [3, 895, 927, 4935, 6528, 6298, 3825, 6268, 1958, 2848, 2837, 4048, 3988, 1179, 4], "code_num": [6225, 25388, 7864, 26985, 21445, 25388, 7864, 25388, 151, 26095, 9822, 18661, 21445, 23971], "code": "string str = \"     hello world        \";\\nstr=str.Trim();", "id": "20314499", "code_sizes": 14}, {"nl_num": [3, 2, 880, 2848, 1098, 6468, 2, 6468, 4537, 3776, 4], "code_num": [19468, 151, 4191, 151, 17802, 151, 31396, 151, 18230, 151, 2, 30504, 23660, 16682, 23971], "code": "Microsoft.Practices.EnterpriseLibrary.Common.Configuration.PolymorphicConfigurationElementCollection<T>", "id": "4902461", "code_sizes": 15}, {"nl_num": [3, 3988, 1179, 6798, 4758, 4805, 927, 473, 2769, 4], "code_num": [26309, 12643, 14735, 2, 9822, 29330, 24298, 18661, 24478, 11846, 20814, 7864, 21691, 14735, 9822, 23474, 13818, 23474, 13818, 23474, 13818, 23474, 13818, 23474, 13818, 23474, 13818, 23474, 13818, 27920, 151, 19966, 151, 13922, 18661, 21445, 20814, 7864, 20814, 151, 27978, 9822, 2, 18661, 151, 18578, 9822, 18661, 21445, 31243, 20814, 21445, 10804, 23971], "code": "public static DateTime ParseUnixDateTime(double unixTime)\\n    {\\n        var dt= new DateTime(1970, 1, 1, 0, 0, 0, 0, System.DateTimeKind.Utc);\\n        dt= dt.AddSeconds(unixTimeStamp).ToLocalTime();\\n        return dt;\\n    }", "id": "31916153", "code_sizes": 54}, {"nl_num": [3, 2, 2848, 2837, 6237, 4048, 6103, 4], "code_num": [11846, 6799, 7864, 2, 151, 22006, 9822, 11272, 18661, 151, 151, 6730, 9822, 9822, 16120, 13818, 3560, 18661, 7864, 16682, 21691, 24478, 13790, 7864, 16120, 13818, 17549, 7864, 3560, 10804, 18661, 151, 3494, 9822, 20958, 7864, 16682, 20958, 151, 17549, 9199, 23474, 18661, 151, 6730, 9822, 3800, 7864, 16682, 6225, 151, 2091, 9822, 26985, 13818, 3800, 151, 6730, 9822, 11414, 7864, 16682, 11414, 151, 13790, 18661, 18661, 18661, 21445, 23971], "code": "var res = longWord\\n    .Split(' ').\\n    .Select((s, i) => new { Str = s, Index = i })\\n    .GroupBy(p => p.Index / 10)\\n    .Select(g => string.Join(\" \", g.Select(v => v.Str)));", "id": "11911359", "code_sizes": 70}, {"nl_num": [3, 6813, 6730, 473, 1850, 6730, 7086, 4869, 1335, 2, 4], "code_num": [26309, 26416, 11968, 7407, 9822, 4220, 21365, 18661, 24478, 11846, 2, 7864, 21365, 151, 27506, 9822, 4549, 9822, 2, 18661, 18661, 4479, 2, 21445, 11846, 2042, 7864, 2, 151, 11577, 21445, 10804, 23971], "code": "public override object ProvideValue(IServiceProvider serviceProvider)\\n{\\n    var rootObjectProvider = serviceProvider.GetService(typeof(IRootObjectProvider)) as IRootObjectProvider;\\n    var root = rootObjectProvider.RootObject;\\n    // do whatever you need to do here\\n}", "id": "3047448", "code_sizes": 33}, {"nl_num": [3, 895, 2379, 787, 451, 3852, 2173, 7076, 6204, 6268, 6580, 1098, 3627, 4], "code_num": [11846, 2, 7864, 21691, 11107, 24478, 1172, 7864, 21691, 2, 9822, 18661, 10804, 21445, 8677, 9822, 11846, 18165, 7864, 8679, 151, 22327, 9822, 26985, 13818, 2, 18661, 18661, 24478, 18165, 151, 2, 9822, 26985, 18661, 21445, 11846, 19143, 7864, 18165, 151, 16029, 9822, 26985, 18661, 21445, 11846, 2, 7864, 18165, 151, 16029, 9822, 26985, 18661, 21445, 10804, 23971], "code": "var xmlReaderSettings = new XmlReaderSettings\\n{\\n    XmlResolver = new XmlXapResolver()\\n};\\n\\nusing (var xmlReader = XmlReader.Create(\"WMAppManifest.xml\", xmlReaderSettings))\\n{\\n    xmlReader.ReadToDescendant(\"App\");\\n\\n    var AppName = xmlReader.GetAttribute(\"Title\");\\n    var AppVersion = xmlReader.GetAttribute(\"Version\");\\n}", "id": "14289313", "code_sizes": 58}, {"nl_num": [3, 89, 927, 4451, 2173, 473, 2, 6189, 4048, 1855, 4], "code_num": [2, 2, 7864, 21691, 2, 9822, 18661, 21445, 151, 151, 151, 9822, 2, 18661, 151, 151, 151, 9822, 17638, 2, 18661, 2, 151, 2, 24820, 12835, 9822, 11968, 26914, 13818, 2, 17524, 18661, 24478, 18044, 9822, 2, 6434, 6134, 17524, 151, 20927, 18661, 24478, 26930, 151, 18725, 9822, 6434, 151, 3990, 151, 14798, 151, 13109, 9822, 18661, 5013, 26985, 5013, 6434, 151, 3990, 151, 28766, 151, 13109, 9822, 18661, 18661, 21445, 10804, 10804, 21445, 2, 151, 2, 9822, 18661, 21445, 23971], "code": "CLLocationManager lm = new CLLocationManager(); //changed the class name\\n... (Acurray)\\n... (Other Specs)\\n\\nlm.LocationsUpdated += delegate(object sender, CLLocationsUpdatedEventArgs e) {\\n    foreach(CLLocation l in e.Locations) {\\n        Console.WriteLine(l.Coordinate.Latitude.ToString() + \", \" +l.Coordinate.Longitude.ToString());\\n    }\\n};\\n\\nlm.StartUpdatingLocation();", "id": "25015791", "code_sizes": 81}, {"nl_num": [3, 5232, 2764, 7086, 4652, 6268, 4096, 4048, 2029, 2660, 6831, 1179, 4], "code_num": [22469, 2017, 2, 9822, 6225, 2, 13818, 6225, 2, 18661, 24478, 8677, 9822, 17308, 28216, 7864, 21691, 17308, 9822, 2, 18661, 18661, 24478, 8677, 9822, 28828, 21060, 7864, 21691, 28828, 9822, 2, 18661, 18661, 24478, 6225, 20410, 21445, 13435, 9822, 9822, 20410, 7864, 28216, 151, 5264, 9822, 18661, 18661, 9776, 17379, 18661, 24478, 6139, 9822, 20410, 151, 17758, 9822, 26985, 18661, 18661, 24478, 21060, 151, 22843, 9822, 20410, 18661, 21445, 10804, 10804, 10804, 10804, 10804, 23971], "code": "private void extract_lines(string filein, string fileout)\\n    {\\n        using (StreamReader reader = new StreamReader(filein))\\n        {\\n            using (StreamWriter writer = new StreamWriter(fileout))\\n            {\\n                string line;\\n                while ((line = reader.ReadLine()) != null)\\n                {\\n                    if (line.Contains(\"what you looking for\"))\\n                    {\\n                        writer.Write(line);\\n                    }\\n                }\\n            }\\n        }\\n    }", "id": "11325028", "code_sizes": 76}, {"nl_num": [3, 2704, 76, 927, 6925, 6104, 2529, 5706, 3627, 4], "code_num": [6225, 22958, 9350, 14544, 7864, 27920, 151, 31109, 151, 5540, 151, 23065, 9822, 26985, 18661, 21445, 23971], "code": "string[] lines = System.IO.File.ReadAllLines(@\"F:\\Designe- Video\\projects\\Phpgonehelp\\Phpgonehelp\\PHPCODE\\Php1.txt\");", "id": "30606620", "code_sizes": 17}, {"nl_num": [3, 3852, 3151, 7086, 2848, 2837, 4], "code_num": [6225, 20033, 7864, 26985, 5013, 19839, 5013, 26985, 21445, 23971], "code": "string xml = \"<foo>\" + foo + \"</foo>\";", "id": "1715653", "code_sizes": 10}, {"nl_num": [3, 895, 927, 637, 5311, 3745, 4331, 2425, 6831, 1179, 4], "code_num": [2861, 151, 21455, 17338, 7864, 21691, 2861, 151, 21455, 9822, 18661, 21445, 2861, 151, 2, 2, 7864, 9822, 2861, 151, 2, 18661, 17338, 151, 7125, 9822, 2861, 151, 15905, 151, 20828, 18661, 21445, 2, 151, 10579, 7864, 263, 21445, 2, 151, 15357, 9822, 9221, 18661, 21445, 23971], "code": "Outlook.Application oApp    = new Outlook.Application ();\\nOutlook._MailItem oMailItem = (Outlook._MailItem)oApp.CreateItem ( Outlook.OlItemType.olMailItem );\\noMailItem.To    = address;\\n// body, bcc etc...\\noMailItem.Display ( true );", "id": "6148639", "code_sizes": 47}, {"nl_num": [3, 89, 2379, 6748, 4451, 3837, 5459, 927, 2029, 6464, 3069, 3245, 3627, 4], "code_num": [18631, 151, 27767, 7864, 30760, 151, 27767, 21445, 23971], "code": "textbox2.Text = textbox.Text;", "id": "4248930", "code_sizes": 9}, {"nl_num": [3, 5100, 1339, 2, 2425, 3836, 6404, 2, 4], "code_num": [3952, 7864, 6255, 151, 2, 9822, 2428, 13818, 2, 151, 14756, 151, 26162, 13818, 2, 151, 14756, 151, 29230, 13818, 2428, 13818, 22786, 2428, 13818, 2428, 18661, 21445, 23971], "code": "Projection = Matrix.CreateOrthographicOffCenter(\\n    0.0f, _graphics.Viewport.Width,\\n    _graphics.Viewport.Height, 0.0f,\\n    -1.0f, 1.0f);", "id": "16265102", "code_sizes": 29}, {"nl_num": [3, 3979, 1486, 3784, 473, 3069, 4], "code_num": [2, 151, 12755, 9822, 26985, 18661, 21445, 23971], "code": "ProcessAsUser.Launch(\"program name\");", "id": "9501560", "code_sizes": 8}, {"nl_num": [3, 89, 927, 1334, 6382, 4152, 7086, 4477, 1397, 4048, 6831, 4767, 4], "code_num": [17112, 151, 3152, 9822, 26985, 18661, 21445, 23971], "code": "Response.Redirect(\"pathtomyhtmlpage.html\");", "id": "23929653", "code_sizes": 8}, {"nl_num": [3, 6199, 6248, 927, 2173, 5697, 6468, 1347, 4048, 6277, 5729, 4], "code_num": [2, 151, 5136, 151, 29165, 9822, 2, 151, 27767, 13818, 14735, 151, 1746, 151, 9921, 9822, 18661, 18661, 21445, 23971], "code": "dataTextView.Rows.Add(txtAddText.Text, DateTime.Now.ToShortTimeString());", "id": "16226229", "code_sizes": 20}, {"nl_num": [3, 6193, 1839, 927, 4599, 7429, 1323, 3534, 4], "code_num": [9699, 18671, 7864, 21691, 9699, 9822, 18661, 21445, 18671, 151, 2, 9822, 4549, 9822, 24468, 18661, 151, 2419, 18661, 21445, 18671, 151, 2, 9822, 21691, 2, 9822, 18661, 18661, 21445, 11846, 19978, 7864, 18671, 151, 26358, 9822, 18661, 21445, 16119, 151, 2, 9822, 21691, 2, 9822, 19978, 18661, 18661, 21445, 23971], "code": "ContainerBuilder builder = new ContainerBuilder();\\nbuilder.RegisterControllers(typeof (MvcApplication).Assembly) ;\\nbuilder.RegisterModule(new LogInjectionModule());\\n\\nvar container = builder.Build() ;\\nDependencyResolver.SetResolver(new AutofacDependencyResolver(container));", "id": "6885477", "code_sizes": 51}, {"nl_num": [3, 3800, 3827, 89, 927, 262, 2848, 1335, 2, 6044, 3296, 2848, 3304, 3627, 4], "code_num": [27600, 2, 12527, 28770, 24478, 21820, 26416, 2017, 3167, 9822, 30756, 17524, 18661, 24478, 6139, 9822, 1743, 9776, 17379, 18661, 24478, 2929, 2, 7864, 21691, 2929, 9822, 1743, 151, 26162, 13818, 1743, 151, 29230, 18661, 21445, 18044, 9822, 28770, 29581, 6134, 1743, 151, 24130, 18661, 6139, 9822, 29581, 151, 29744, 151, 23409, 9822, 12603, 151, 29744, 18661, 23503, 29581, 9776, 12603, 18661, 29581, 151, 27173, 9822, 2, 13818, 29581, 151, 29744, 18661, 21445, 17524, 151, 18927, 151, 26149, 9822, 2, 13818, 22786, 9222, 13818, 22786, 11400, 18661, 21445, 2, 151, 8558, 9822, 18661, 21445, 10804, 17524, 151, 18927, 151, 19748, 9822, 21691, 2724, 9822, 26038, 151, 17335, 9822, 23474, 13818, 23474, 13818, 23474, 13818, 23474, 18661, 18661, 13818, 29744, 18661, 21445, 10804, 10804, 23971], "code": "class Plexiglass : Control\\n{\\n    protected override void OnPaint(PaintEventArgs e)\\n    {\\n        if (Parent != null)\\n        {\\n            Bitmap plexiCover = new Bitmap(Parent.Width, Parent.Height);\\n            foreach (Control c in Parent.Controls)\\n                if (c.Bounds.IntersectsWith(this.Bounds) & c != this)\\n                    c.DrawToBitmap(plexiCover, c.Bounds);\\n            e.Graphics.DrawImage(plexiCover, -Left, -Top);\\n            plexiCover.Dispose();\\n        }\\n        e.Graphics.FillRectangle(new SolidBrush(Color.FromArgb(128, 0, 0, 0)), Bounds);\\n    }\\n}", "id": "25593771", "code_sizes": 124}, {"nl_num": [3, 895, 927, 4451, 5559, 7086, 2, 3627, 4], "code_num": [2, 7864, 2, 151, 2, 9822, 26985, 5013, 23802, 5013, 26985, 5013, 2, 5013, 26985, 13818, 17379, 13818, 23474, 13818, 23474, 13818, 19515, 29331, 18661, 151, 2, 9822, 884, 18661, 21445, 23971], "code": "bvl2 = bvs.GetPaged(\" Date = '\" + Today + \"' AND UserId = \" + SpecUserID + \"\", null, 0, 1000, out x).ToDataSet(false);", "id": "22592997", "code_sizes": 32}, {"nl_num": [3, 895, 927, 2348, 2848, 2837, 927, 894, 1833, 2660, 5829, 290, 2, 3472, 5475, 4048, 3988, 1179, 4], "code_num": [24698, 151, 21031, 9822, 2, 18661, 23971], "code": "int.Parse(ageMonth)", "id": "23809189", "code_sizes": 7}, {"nl_num": [3, 2, 880, 2973, 4], "code_num": [2965, 25212, 7864, 21691, 2965, 9822, 21691, 22118, 9822, 31067, 18661, 18661, 21445, 25212, 151, 11218, 9822, 2, 18661, 21445, 23971], "code": "Thread t = new Thread (new ParameterizedThreadStart(myMethod));\\nt.Start (myParameterObject);", "id": "1195896", "code_sizes": 21}, {"nl_num": [3, 4818, 529, 6468, 2848, 7303, 2669, 7086, 2991, 5914, 4048, 2848, 6558, 4], "code_num": [18044, 9822, 16510, 7360, 6134, 20816, 151, 4235, 22958, 23474, 9350, 151, 5136, 18661, 24478, 19835, 9822, 24698, 29331, 7864, 23474, 21445, 29331, 30504, 7360, 151, 21230, 151, 19823, 21445, 29331, 14400, 18661, 26930, 151, 18725, 9822, 7360, 151, 21230, 22958, 29331, 9350, 151, 13109, 9822, 18661, 18661, 21445, 26930, 151, 18725, 9822, 18661, 21445, 10804, 23971], "code": "foreach (DataRow r in ds.Tables[0].Rows)\\n{\\n   for(int x = 0; x < r.ItemArray.Length; x++)\\n       Console.WriteLine(r.ItemArray[x].ToString());\\n   Console.WriteLine();    \\n}", "id": "17092632", "code_sizes": 57}, {"nl_num": [3, 3988, 1179, 6571, 4394, 3757, 4], "code_num": [24683, 8161, 7864, 26914, 4479, 24683, 21445, 15697, 5717, 7864, 9221, 21445, 13435, 9822, 5717, 18661, 24478, 19835, 9822, 24698, 3560, 7864, 3567, 151, 5997, 151, 7785, 22786, 23474, 21445, 3560, 12910, 23474, 21445, 3560, 25276, 18661, 24478, 24478, 6139, 9822, 8161, 151, 495, 28597, 9221, 18661, 24478, 17524, 151, 628, 7864, 9221, 21445, 5717, 7864, 884, 21445, 28767, 21445, 10804, 5633, 24478, 6225, 2, 7864, 3567, 151, 5997, 22958, 3560, 9350, 151, 13109, 9822, 18661, 21445, 12603, 151, 2, 9822, 26985, 5013, 2, 5013, 19302, 19302, 18661, 21445, 27920, 151, 17394, 151, 2965, 151, 10909, 9822, 23474, 18661, 21445, 8161, 151, 28418, 9822, 3560, 27705, 23474, 18661, 21445, 10804, 10804, 10804, 10804, 23971], "code": "BackgroundWorker worker = sender as BackgroundWorker;\\nbool go = true;\\nwhile(go)\\n{\\n    for (int i = listBox1.Items.Count - 1; i >= 0; i--)\\n    {\\n        {\\n            if (worker.CancellationPending == true)\\n            {\\n                e.Cancel = true;\\n                go = false;\\n                break;\\n            }\\n            else\\n            {\\n                string queryhere = listBox1.Items[i].ToString();\\n                this.SetTextappend(\"\" + queryhere + \"\\n\");\\n                System.Threading.Thread.Sleep(500);\\n                worker.ReportProgress(i * 1);\\n            }\\n        }\\n    }\\n}", "id": "6580765", "code_sizes": 114}, {"nl_num": [3, 6774, 6468, 2, 4048, 290, 1328, 6773, 4572, 4], "code_num": [22469, 24698, 3934, 7864, 23474, 21445, 26309, 18930, 9822, 18661, 24478, 2518, 9822, 18661, 21445, 10804, 22469, 2017, 2139, 9822, 11968, 26914, 13818, 16987, 17524, 18661, 24478, 6139, 9822, 12603, 151, 26162, 28597, 3934, 18661, 24478, 12603, 151, 2, 151, 21093, 7864, 21691, 27920, 151, 1834, 151, 8836, 9822, 23474, 13818, 23474, 18661, 21445, 3934, 7864, 23474, 21445, 10804, 5633, 24478, 12603, 151, 2, 151, 21093, 7864, 21691, 27920, 151, 1834, 151, 8836, 9822, 3934, 13818, 23474, 18661, 21445, 3934, 14400, 21445, 10804, 10804, 22469, 2017, 17390, 9822, 11968, 26914, 13818, 16987, 17524, 18661, 24478, 8054, 151, 11218, 9822, 18661, 21445, 10804, 23971], "code": "private int xPos=0;\\n\\n        public Form1()\\n        {\\n            InitializeComponent();\\n        }\\n\\n        private void timer1_Tick(object sender, EventArgs e)\\n        {\\n            if (this.Width == xPos)\\n            {\\n                //repeat marquee\\n                this.lblMarquee.Location = new System.Drawing.Point(0, 40);\\n                xPos = 0;\\n            }\\n            else\\n            {\\n                this.lblMarquee.Location = new System.Drawing.Point(xPos, 40);\\n                xPos++;\\n            }\\n        }\\n\\n        private void Form1_Load(object sender, EventArgs e)\\n        {\\n            timer1.Start();\\n        }", "id": "6223570", "code_sizes": 103}, {"nl_num": [3, 895, 2379, 787, 5829, 2848, 5195, 2874, 1098, 927, 1691, 4048, 3988, 1179, 3472, 2, 1339, 2, 5475, 4], "code_num": [12643, 6225, 2, 9822, 13351, 8692, 18661, 24478, 24698, 22958, 9350, 24024, 7864, 13351, 151, 26765, 9822, 8692, 18661, 21445, 6139, 9822, 24024, 22958, 23474, 9350, 9776, 23474, 18661, 24478, 9439, 21691, 5441, 9822, 18661, 21445, 10804, 31243, 6225, 151, 15157, 9822, 26985, 13818, 9822, 5274, 18661, 24024, 22958, 23474, 9350, 13818, 9822, 5274, 18661, 24024, 22958, 23474, 9350, 13818, 9822, 5274, 18661, 24024, 22958, 23474, 9350, 18661, 21445, 10804, 23971], "code": "static string ConvertToHex(decimal d)\\n{\\n    int[] bits = decimal.GetBits(d);\\n    if (bits[3] != 0) // Sign and exponent\\n    {\\n        throw new ArgumentException();\\n    }\\n    return string.Format(\"{0:x8}{1:x8}{2:x8}\",\\n        (uint)bits[2], (uint)bits[1], (uint)bits[0]);\\n}", "id": "221154", "code_sizes": 71}, {"nl_num": [3, 6002, 2245, 927, 5174, 2848, 3610, 1189, 3071, 2660, 3988, 1179, 290, 4595, 4], "code_num": [1326, 20808, 7864, 21691, 1326, 9822, 18661, 21445, 11846, 2, 7864, 20808, 151, 4361, 151, 6230, 9822, 20958, 7864, 16682, 20958, 151, 1601, 16682, 23474, 18661, 21445, 23971], "code": "// assuming a \"Product\" table, which has an entity pluralized to \"Products\"\\n\\nMyEntities db = new MyEntities();\\n\\nvar cheapProducts = db.Products.Where(p => p.Price > 30); // var is IEnumerable<Product>", "id": "3989638", "code_sizes": 28}, {"nl_num": [3, 895, 927, 244, 2309, 2885, 2, 708, 3627, 4], "code_num": [25727, 27043, 7864, 17379, 21445, 27043, 7864, 9822, 16120, 13818, 17524, 18661, 7864, 16682, 24478, 24626, 151, 18827, 25277, 27043, 21445, 10804, 21445, 23971], "code": "EventHandler handler = null;\\nhandler = (s, e) => \\n{    \\n    //......                 \\n    vm.Loaded -= handler;\\n};", "id": "8760263", "code_sizes": 24}, {"nl_num": [3, 2, 5509, 529, 7086, 3988, 1179, 1678, 4652, 927, 2441, 4141, 4242, 4], "code_num": [11846, 7884, 7864, 10887, 151, 19358, 151, 26583, 151, 13868, 9822, 18661, 151, 6230, 9822, 8025, 7864, 16682, 8025, 151, 14066, 9822, 26985, 18661, 18661, 151, 7785, 9822, 18661, 21445, 19835, 9822, 11846, 4759, 7864, 23474, 21445, 4759, 12469, 7884, 21445, 4759, 14400, 18661, 24478, 2, 151, 5997, 151, 29165, 9822, 10887, 151, 19358, 22958, 26985, 13818, 4759, 9350, 18661, 10804, 23971], "code": "var maxIndex = ConfigurationManager.AppSettings.AllKeys\\n                 .ToList()\\n                 .Where(k => k.StartsWith(\"confname\"))\\n                 .Count();\\n\\nfor (var index = 1; index <= maxIndex; index++)\\n{\\n  cbxConfig.Items.Add(ConfigurationManager.AppSettings[\"confname{0}\", index])\\n}", "id": "27161381", "code_sizes": 62}, {"nl_num": [3, 6122, 529, 927, 2837, 6558, 880, 5777, 4], "code_num": [31243, 7286, 151, 12420, 9822, 4549, 9822, 2, 18661, 18661, 151, 482, 30504, 2, 16682, 9822, 18661, 151, 6230, 9822, 11414, 7864, 16682, 9822, 24698, 18661, 11414, 16682, 23474, 18661, 151, 6730, 9822, 11414, 7864, 16682, 11414, 151, 13109, 9822, 18661, 18661, 151, 13868, 9822, 18661, 21445, 23971], "code": "return\\n    Enum.GetValues( typeof(AnimalCodeType) ).\\n    Cast<AnimalCodeType>().\\n    Where( v => (int)v > 0 ).\\n    Select( v => v.ToString() ).\\n    ToList();", "id": "25012262", "code_sizes": 48}, {"nl_num": [3, 3618, 2632, 6277, 5184, 4], "code_num": [30238, 30504, 2, 16682, 2, 7864, 21691, 30238, 30504, 2, 16682, 9822, 18661, 21445, 18044, 9822, 11846, 22627, 6134, 17864, 151, 2, 18661, 24478, 2, 151, 26703, 9822, 21691, 2, 24478, 10804, 18661, 21445, 10804, 22161, 7864, 12074, 151, 11709, 9822, 2, 18661, 21445, 23971], "code": "List<Weapon> weapons = new List<Weapon>();\\nforeach(var weapon in database.weapons)\\n{\\n    weapons.add(new Weapon \\n                    { \\n                        // initialise from db fields \\n                    });\\n}  \\nws = JsonConvert.SerializeObject(weapons);", "id": "30163147", "code_sizes": 45}, {"nl_num": [3, 5163, 5459, 4048, 5454, 5823, 7408, 175, 4], "code_num": [2, 151, 12943, 23971], "code": "listViewResultados.SelectedItem", "id": "11706652", "code_sizes": 4}, {"nl_num": [3, 6831, 1179, 5823, 1758, 644, 385, 4048, 2848, 5907, 3134, 1323, 3837, 4], "code_num": [26756, 9822, 2, 18661, 24478, 9439, 21445, 10804, 26756, 9822, 29533, 5315, 18661, 24478, 9439, 21691, 2, 9822, 5315, 18661, 21445, 10804, 23971], "code": "catch (MyCustomException)\\n{\\n   throw;\\n}\\ncatch (Exception ex)\\n{\\n   throw new MyCustomException(ex);\\n}", "id": "1908494", "code_sizes": 23}, {"nl_num": [3, 895, 927, 5151, 2848, 1286, 6404, 2660, 2554, 4], "code_num": [27920, 151, 22598, 151, 30551, 2, 7864, 13512, 151, 12711, 9822, 26985, 18661, 21445, 23971], "code": "System.Xml.XmlNodeList MSPressBookList = xmldoc.SelectNodes(\"//Publisher[. = 'MSPress']/parent::node()/Title\");", "id": "12428049", "code_sizes": 15}, {"nl_num": [3, 2948, 2, 980, 3238, 4459, 4], "code_num": [2017, 2, 9822, 11968, 26914, 13818, 16987, 17524, 18661, 24478, 15656, 8731, 7864, 26914, 4479, 15656, 21445, 6139, 9822, 8731, 9776, 17379, 18661, 24478, 24698, 13013, 7864, 4740, 151, 24130, 151, 2, 9822, 8731, 18661, 21445, 6139, 9822, 13013, 16682, 23474, 18661, 24478, 15656, 2, 7864, 4740, 151, 24130, 22958, 23474, 9350, 4479, 15656, 21445, 4740, 151, 24130, 151, 27703, 9822, 8731, 13818, 23474, 18661, 21445, 4740, 151, 24130, 151, 27703, 9822, 2, 13818, 13013, 18661, 21445, 10804, 10804, 10804, 23971], "code": "void uc_ButtonClicked(object sender, EventArgs e) {\\n  UserControl1 uc = sender as UserControl1;\\n  if (uc != null) {\\n    int childIndex = flowLayoutPanel1.Controls.GetChildIndex(uc);\\n    if (childIndex > 0) {\\n      UserControl1 ucTop = flowLayoutPanel1.Controls[0] as UserControl1;\\n      flowLayoutPanel1.Controls.SetChildIndex(uc, 0);\\n      flowLayoutPanel1.Controls.SetChildIndex(ucTop, childIndex);\\n    }\\n  }\\n}", "id": "18085140", "code_sizes": 81}, {"nl_num": [3, 2554, 1201, 927, 5777, 7042, 4], "code_num": [21103, 151, 6230, 9822, 29581, 7864, 16682, 10466, 2, 151, 17758, 9822, 29581, 151, 20228, 18661, 18661, 21445, 23971], "code": "masterList.Where(c => !excludeItem.Contains(c.customField));", "id": "2884873", "code_sizes": 19}, {"nl_num": [3, 895, 927, 5158, 6890, 4048, 4121, 5041, 4048, 797, 2660, 6831, 1179, 1397, 3627, 4], "code_num": [8836, 30637, 7864, 21691, 8836, 9822, 12603, 151, 26162, 9199, 23474, 13818, 12603, 151, 29230, 9199, 23474, 18661, 21445, 24698, 20646, 7864, 23474, 21445, 29330, 7182, 7864, 23474, 9199, 9822, 29330, 18661, 20646, 21445, 24698, 23839, 7864, 23474, 21445, 19835, 9822, 24698, 3560, 7864, 23474, 21445, 3560, 30504, 20646, 21445, 3560, 14400, 18661, 24478, 1136, 18346, 7864, 21691, 1136, 9822, 18661, 21445, 18346, 151, 27767, 7864, 26985, 5013, 3560, 21445, 18346, 151, 21093, 7864, 21691, 8836, 9822, 9822, 24698, 18661, 9822, 30637, 151, 27845, 5013, 23839, 27705, 21549, 151, 23406, 9822, 9822, 7182, 27705, 3560, 18661, 27705, 21549, 151, 16655, 9199, 23474, 18661, 18661, 13818, 9822, 24698, 18661, 9822, 30637, 151, 5161, 5013, 23839, 27705, 21549, 151, 9400, 9822, 9822, 7182, 27705, 3560, 18661, 27705, 21549, 151, 16655, 9199, 23474, 18661, 18661, 18661, 21445, 12603, 151, 2, 151, 24130, 151, 29165, 9822, 18346, 18661, 21445, 10804, 23971], "code": "Point cntr = new Point(this.Width/2, this.Height/2); // cntr Points Center of Circle\\n// Count gives Number of Buttons        \\nint count = 25; \\n// angle gives angle Between each Button\\ndouble angle = 360/(double)count; \\nint radius = 150; // Circle's Radius\\nfor (int i = 0; i < count; i++)\\n{\\n    Button button = new Button();\\n    button.Text = \"Button \" + i;\\n    button.Location = new Point((int)(cntr.X + radius * Math.Cos((angle * i) * Math.PI / 180)),\\n        (int)(cntr.Y + radius * Math.Sin((angle * i) * Math.PI / 180)));\\n    this.Panle1.Controls.Add(button);\\n}", "id": "21084821", "code_sizes": 147}, {"nl_num": [3, 6831, 1179, 89, 927, 4111, 880, 6383, 364, 5454, 3705, 2020, 2363, 4], "code_num": [19835, 9822, 24698, 3560, 7864, 23474, 21445, 3560, 30504, 23474, 21445, 3560, 14400, 18661, 24478, 11846, 12695, 7864, 21691, 1136, 9822, 18661, 21445, 12695, 151, 27767, 7864, 26985, 5013, 3560, 21445, 12695, 151, 21093, 7864, 21691, 8836, 9822, 23474, 13818, 23474, 27705, 9822, 3560, 5013, 23474, 18661, 22786, 23474, 18661, 21445, 12695, 151, 24300, 24820, 9822, 26914, 13818, 25079, 18661, 7864, 16682, 24478, 6355, 151, 21150, 9822, 9822, 9822, 1136, 18661, 26914, 18661, 151, 27767, 5013, 26985, 18661, 21445, 10804, 21445, 24130, 151, 29165, 9822, 12695, 18661, 21445, 10804, 23971], "code": "for (int i = 0; i < 10; i++)\\n{\\n    var btn = new Button();\\n    btn.Text = \"Button \" + i;\\n    btn.Location = new Point(10, 30 * (i + 1) - 16);\\n    btn.Click += (sender, args) =>\\n    {\\n        // sender is the instance of the button that was clicked\\n        MessageBox.Show(((Button)sender).Text + \" was clicked\");\\n    };\\n    Controls.Add(btn);\\n}", "id": "3645643", "code_sizes": 90}, {"nl_num": [3, 895, 2379, 787, 4056, 2848, 5396, 868, 4148, 3627, 4], "code_num": [24698, 21255, 7864, 8355, 9822, 26985, 13818, 2, 18661, 21445, 2, 29620, 7864, 2, 9822, 21255, 13818, 23474, 13818, 2, 18661, 21445, 6139, 9822, 2, 28597, 22786, 23474, 18661, 24478, 17966, 9822, 19302, 2, 10466, 19302, 18661, 21445, 18905, 9822, 23474, 18661, 21445, 10804, 4394, 6948, 22958, 23474, 9350, 21445, 2, 2, 7864, 5431, 9822, 21255, 13818, 6948, 13818, 23474, 18661, 21445, 29620, 7864, 2, 9822, 21255, 13818, 23474, 13818, 2, 18661, 21445, 2, 2, 7864, 28996, 9822, 21255, 13818, 6948, 13818, 23474, 18661, 21445, 2, 9822, 21255, 18661, 21445, 17406, 9822, 21255, 18661, 21445, 23971], "code": "int fd = open(\"test.dat\", O_RDWR);\\noff_t offset = lseek(fd, 200, SEEK_SET);\\nif (off_t == -1) {\\n    printf(\"Boom!\\n\");\\n    exit(1);\\n}    \\nchar buf[1024];\\nssize_t bytes_read = read(fd, buf, 1024);\\noffset = lseek(fd, 100, SEEK_SET);\\nssize_t bytes_written = write(fd, buf, 1024);\\nflush(fd);\\nclose(fd);", "id": "2557598", "code_sizes": 96}, {"nl_num": [3, 3568, 4791, 894, 1215, 2624, 6268, 3039, 552, 4048, 3988, 1179, 2483, 4], "code_num": [20068, 27665, 7864, 20068, 151, 21031, 9822, 26985, 18661, 21445, 23971], "code": "XDocument xdoc = XDocument.Parse(@\"<sitecollection name=\"\"collectionName\"\">\\n    <site name=\"\"sitename\"\">\\n    <maingroup name=\"\"maingroupname\"\"> \\n    <group name=\"\"groupname\"\"> </group>\\n    </maingroup> \\n    </site>\\n    </sitecollection>\\n    \");", "id": "8658947", "code_sizes": 11}, {"nl_num": [3, 6560, 4048, 2173, 2, 2499, 6573, 2885, 898, 2848, 6240, 5612, 3627, 4], "code_num": [26309, 2017, 21749, 9822, 14735, 23581, 18661, 24478, 29330, 2, 7864, 9822, 23581, 22786, 14735, 151, 1746, 18661, 151, 10696, 21445, 6139, 9822, 2, 12469, 23474, 25974, 2, 16682, 24698, 151, 4169, 18661, 9439, 21691, 9879, 9822, 18661, 21445, 8054, 151, 10526, 7864, 9822, 24698, 18661, 2, 21445, 8054, 151, 9330, 7864, 9221, 21445, 10804, 23971], "code": "public void StartTimer(DateTime target) {\\n  double msec = (target - DateTime.Now).TotalMilliseconds;\\n  if (msec <= 0 || msec > int.MaxValue) throw new ArgumentOutOfRangeException();\\n  timer1.Interval = (int)msec;\\n  timer1.Enabled = true;\\n}", "id": "670570", "code_sizes": 56}, {"nl_num": [3, 1117, 2848, 3231, 7086, 2029, 361, 3827, 2, 4050, 1900, 6438, 3627, 4], "code_num": [16138, 9822, 2, 13818, 10454, 13818, 9822, 24698, 18661, 25485, 151, 2938, 13818, 23474, 18661, 21445, 16138, 9822, 2, 13818, 21746, 13818, 9822, 24698, 18661, 25485, 151, 2938, 13818, 23474, 18661, 21445, 23971], "code": "PostMessage(mainControlChild, WM_KEYDOWN, (int)Keys.Return, 0);\\nPostMessage(mainControlChild, WM_KEYUP, (int)Keys.Return, 0);", "id": "6119617", "code_sizes": 33}, {"nl_num": [3, 895, 927, 4111, 880, 2947, 552, 4048, 3534, 2211, 7258, 6408, 4], "code_num": [26309, 3352, 15190, 9822, 24698, 6137, 18661, 24478, 11846, 25735, 7864, 26169, 151, 2, 151, 29747, 9822, 6137, 18661, 21445, 6139, 9822, 25735, 28597, 17379, 18661, 24478, 31243, 28253, 9822, 26985, 18661, 21445, 10804, 31243, 25040, 9822, 25735, 18661, 21445, 10804, 23971], "code": "public ActionResult Edit(int id)\\n{\\n    var page = Services.PageService.GetPage(id);\\n\\n    if(page == null)\\n    {\\n        return Content(\"CANNOT FIND PAGE\");\\n    }\\n\\n    return View(page);\\n}", "id": "9287656", "code_sizes": 42}, {"nl_num": [3, 895, 927, 5777, 552, 407, 2412, 5182, 4], "code_num": [6225, 2, 7864, 9822, 17524, 151, 27686, 22958, 26985, 9350, 151, 17942, 151, 27932, 9822, 18661, 18661, 151, 13109, 9822, 18661, 21445, 19765, 2, 7864, 21691, 19765, 9822, 26985, 13818, 2839, 18661, 21445, 17524, 151, 11829, 151, 29165, 9822, 2, 18661, 21445, 23971], "code": "string tutorUserName = (e.Parameters[\"tutorusername\"].Values.First()).ToString();\\n ReportDataSource rdsTradeDetails = new ReportDataSource(\"Test_DataSet\", report);\\n e.DataSources.Add(rdsTradeDetails);", "id": "18054739", "code_sizes": 43}, {"nl_num": [3, 316, 1019, 2, 3611, 7351, 1323, 761, 684, 3827, 635, 3827, 2, 4], "code_num": [177, 151, 30560, 151, 12445, 151, 30190, 28216, 7864, 21691, 177, 151, 30560, 151, 12445, 151, 30190, 9822, 21691, 177, 151, 30560, 151, 12445, 151, 2, 9822, 26985, 18661, 13818, 17379, 18661, 21445, 23971], "code": "iTextSharp.text.pdf.PdfReader reader = new iTextSharp.text.pdf.PdfReader(new iTextSharp.text.pdf.RandomAccessFileOrArray(@\"C:\\PDFFile.pdf\"), null);", "id": "6999296", "code_sizes": 34}, {"nl_num": [3, 2671, 1307, 3745, 1605, 4048, 700, 6039, 4053, 5397, 2173, 5459, 4], "code_num": [20068, 20033, 7864, 20068, 151, 7737, 9822, 26985, 18661, 21445, 6225, 2, 7864, 26985, 21445, 3686, 22807, 7864, 20033, 151, 21670, 9822, 26985, 18661, 151, 27932, 9822, 18661, 21445, 3686, 5304, 7864, 22807, 151, 4529, 9822, 18661, 151, 4717, 9822, 29331, 7864, 16682, 29331, 151, 23339, 28597, 2, 18661, 21445, 6139, 9822, 5304, 28597, 17379, 18661, 24478, 5304, 7864, 21691, 3686, 9822, 26985, 18661, 21445, 5304, 151, 23339, 7864, 2, 21445, 22807, 151, 29165, 9822, 5304, 18661, 21445, 10804, 23971], "code": "XDocument xml = XDocument.Load(\"path_to_file\");\\nstring newCountry = \"UAE\";\\n\\nXElement countries = xml.Descendants(\"Countries\").First();\\nXElement el = countries.Elements().FirstOrDefault(x => x.Value == newCountry);\\nif (el == null)\\n{\\n    el = new XElement(\"country\");\\n    el.Value = newCountry;\\n    countries.Add(el);        \\n}\\n\\n//Console.WriteLine(countries.ToString());", "id": "24853376", "code_sizes": 80}, {"nl_num": [3, 895, 2379, 787, 7085, 2362, 739, 927, 5512, 3071, 6268, 7303, 6204, 6240, 4048, 5729, 4], "code_num": [11846, 22441, 7864, 26985, 21445, 11846, 26706, 7864, 2955, 151, 20494, 9822, 22441, 13818, 26985, 18661, 151, 30670, 21445, 11846, 17864, 7864, 26706, 22958, 23474, 9350, 151, 13109, 9822, 18661, 21445, 11846, 7915, 7864, 26706, 22958, 23474, 9350, 151, 13109, 9822, 18661, 21445, 23971], "code": "var query = @\"SELECT * FROM [Database Name].[dbo].[Table Name]\";\\n var match = Regex.Match(query, @\"\\[([^\\]]+)\\]\\.\\[dbo\\]\\.\\[([^\\]]+)\\]\").Groups;\\n var database = match[1].ToString();\\n var table = match[2].ToString();\\n\\n //database = \"Database Name\"\\n //table = \"Table Name\"", "id": "27105702", "code_sizes": 44}, {"nl_num": [3, 1643, 6777, 2935, 407, 6777, 7246, 4], "code_num": [9822, 17524, 151, 19377, 151, 7670, 9822, 26985, 18661, 4479, 27988, 18661, 151, 27767, 7864, 26985, 21445, 9822, 17524, 151, 19377, 151, 7670, 9822, 26985, 18661, 4479, 27988, 18661, 151, 8551, 7864, 9221, 21445, 23971], "code": "(e.Item.FindControl(\"lblShowResponses\") as Label).Text = \"Test\";\\n(e.Item.FindControl(\"lblShowResponses\") as Label).Visible = true;", "id": "9853467", "code_sizes": 35}, {"nl_num": [3, 2478, 4791, 3240, 880, 1210, 4], "code_num": [3131, 21199, 7864, 25905, 151, 19636, 151, 12711, 9822, 26985, 18661, 21445, 6139, 9822, 21199, 9776, 17379, 18661, 24478, 18044, 9822, 28319, 11125, 6134, 21199, 18661, 24478, 28319, 13335, 7864, 11125, 151, 1764, 9822, 26985, 18661, 21445, 6139, 9822, 13335, 9776, 17379, 18661, 24478, 10804, 10804, 10804, 23971], "code": "HtmlNodeCollection nodes = doc.DocumentNode.SelectNodes(\"//div[@class='result-link']\");\\nif (nodes != null)\\n{\\n    foreach (HtmlNode node in nodes)\\n    {\\n        HtmlNode a = node.SelectSingleNode(\"a[@href]\");\\n        if (a != null)\\n        {\\n            // use  a.Attributes[\"href\"];\\n        }\\n\\n        // etc...\\n    }\\n}", "id": "27461741", "code_sizes": 48}, {"nl_num": [3, 895, 2082, 787, 6763, 2848, 1554, 2896, 1339, 519, 1554, 880, 894, 6237, 6468, 2764, 3627, 4], "code_num": [2, 151, 5997, 151, 29165, 9822, 26985, 18661, 21445, 2, 151, 5997, 151, 29165, 9822, 26985, 18661, 21445, 151, 151, 151, 23971], "code": "lstDSYDepartment.Items.Add(\"Administration\");\\nlstDSYDepartment.Items.Add(\"Imaging Services\");\\n...", "id": "24717887", "code_sizes": 22}, {"nl_num": [3, 6823, 3745, 4723, 4048, 2848, 3757, 4], "code_num": [18044, 9822, 24698, 22811, 6134, 8055, 151, 11832, 9822, 23474, 13818, 23474, 18661, 18661, 24478, 24698, 2, 7864, 22811, 21445, 31265, 7864, 21691, 2965, 9822, 9822, 18661, 7864, 16682, 10501, 9822, 2, 151, 13109, 9822, 18661, 18661, 18661, 21445, 31265, 151, 11218, 9822, 18661, 21445, 10804, 23971], "code": "foreach (int num in Enumerable.Range(0,5))\\n    {\\n        int loopnum = num;\\n\\n        thread = new Thread(() => print(loopnum.ToString())); \\n        thread.Start();  \\n    }", "id": "4048459", "code_sizes": 47}, {"nl_num": [3, 1698, 4677, 7086, 3988, 1179, 6221, 5275, 206, 1705, 4], "code_num": [30238, 30504, 973, 16682, 2, 7864, 21691, 30238, 30504, 973, 16682, 9822, 18661, 21445, 11846, 10426, 7864, 2, 151, 1945, 9822, 17524, 7864, 16682, 17524, 151, 2, 18661, 151, 3494, 9822, 17524, 7864, 16682, 17524, 151, 25854, 18661, 151, 6230, 9822, 17524, 7864, 16682, 17524, 151, 7785, 9822, 18661, 16682, 23474, 18661, 151, 6730, 9822, 3800, 7864, 16682, 21691, 24478, 2, 7864, 3800, 151, 4717, 9822, 18661, 13818, 2, 7864, 3800, 151, 17090, 9822, 23474, 18661, 151, 13868, 9822, 18661, 10804, 18661, 21445, 18044, 9822, 11846, 10191, 6134, 10426, 18661, 24478, 973, 2, 7864, 10191, 151, 2, 21445, 30238, 30504, 973, 16682, 30466, 7864, 10191, 151, 2, 21445, 10804, 23971], "code": "List<ListItem> entitiesList = new List<ListItem>();\\n//some code to fill the list\\nvar duplicates = entitiesList.OrderByDescending(e => e.createdon)\\n                    .GroupBy(e => e.accountNumber)\\n                    .Where(e => e.Count() > 1)\\n                    .Select(g => new\\n                    {\\n                        MostRecent = g.FirstOrDefault(),\\n                        Others = g.Skip(1).ToList()\\n                    });\\n\\nforeach (var item in duplicates)\\n{\\n    ListItem mostRecent = item.MostRecent;\\n    List<ListItem> others = item.Others;\\n    //do stuff with others\\n}", "id": "21410153", "code_sizes": 110}, {"nl_num": [3, 5964, 2848, 2837, 654, 2848, 2874, 1098, 338, 2848, 4198, 3825, 2173, 6730, 290, 6730, 4], "code_num": [28316, 7864, 2, 151, 14066, 9822, 26985, 18661, 25740, 26985, 5013, 2, 12527, 2, 21445, 23971], "code": "newValue = searchFieldValue1.StartsWith(\".\")\\n               ? \"0\" + searchFieldValue1\\n               : searchFieldValue1;", "id": "25735796", "code_sizes": 16}, {"nl_num": [3, 3428, 2245, 927, 4978, 2848, 1890, 6044, 2173, 967, 2821, 2848, 1554, 5298, 1554, 542, 4], "code_num": [20969, 20596, 7864, 21691, 15419, 30504, 11633, 151, 2, 16682, 9822, 12835, 9822, 18661, 24478, 31243, 15800, 151, 3094, 9822, 6808, 10497, 18661, 10804, 18661, 21445, 11968, 2, 7864, 5667, 9822, 20596, 13818, 17379, 18661, 21445, 23971], "code": "Delegate methodCall = new Func<MyService.CallResult>(delegate() { return service.DoWork(ref myInput)});\\nobject callResult = CallMethod(methodCall, null);", "id": "8931027", "code_sizes": 37}, {"nl_num": [3, 895, 927, 4451, 2173, 5649, 6468, 894, 2, 708, 3627, 4], "code_num": [9224, 9822, 18661, 151, 2419, 151, 25361, 9822, 26985, 18661, 23971], "code": "GetType().Assembly.GetManifestResourceStream(\"someresourcestringhere\")", "id": "6942071", "code_sizes": 11}, {"nl_num": [3, 6191, 1339, 637, 2510, 2425, 4], "code_num": [11846, 2, 7864, 2, 151, 2, 21445, 2, 151, 26802, 9822, 26985, 18661, 21445, 23971], "code": "var itemOps = Dte.ItemOperations;\\nitemOps.Navigate(\"http://bing.com\");", "id": "13614242", "code_sizes": 15}, {"nl_num": [3, 895, 927, 1011, 3069, 927, 4096, 894, 2, 5530, 4652, 4], "code_num": [18, 6225, 18931, 7864, 26985, 21445, 23334, 21259, 7864, 21691, 23334, 9822, 18931, 18661, 21445, 3681, 8300, 7864, 21259, 151, 19823, 21445, 17112, 151, 18734, 9822, 18661, 21445, 17112, 151, 620, 7864, 17828, 151, 10006, 9822, 18931, 18661, 21445, 17112, 151, 31660, 9822, 26985, 13818, 6225, 151, 15157, 9822, 26985, 13818, 27920, 151, 31109, 151, 17828, 151, 17538, 9822, 18931, 18661, 18661, 18661, 21445, 17112, 151, 31660, 9822, 26985, 13818, 8300, 151, 13109, 9822, 26985, 18661, 18661, 21445, 17112, 151, 11952, 9822, 18931, 18661, 21445, 17112, 151, 9548, 9822, 18661, 21445, 23971], "code": "const string fName = @\"C:\\Test.xls\";\\n  FileInfo fi = new FileInfo(fName);\\n  long sz = fi.Length;\\n\\n  Response.ClearContent();\\n  Response.ContentType = Path.GetExtension(fName);\\n  Response.AddHeader(\"Content-Disposition\", string.Format(\"attachment; filename = {0}\",System.IO.Path.GetFileName(fName)));\\n  Response.AddHeader(\"Content-Length\", sz.ToString(\"F0\"));\\n  Response.TransmitFile(fName);\\n  Response.End();", "id": "9369535", "code_sizes": 92}, {"nl_num": [3, 5196, 6974, 7086, 6055, 5823, 4587, 880, 894, 5971, 6204, 2660, 2, 4], "code_num": [17112, 151, 31660, 9822, 26985, 13818, 26985, 5013, 17828, 151, 17538, 9822, 26271, 151, 6184, 18661, 18661, 21445, 23971], "code": "Response.AddHeader(\"content-disposition\", \"attachment;filename=\" + Path.GetFileName(file.Name));", "id": "14711685", "code_sizes": 19}, {"nl_num": [3, 3988, 1179, 6925, 290, 86, 880, 2, 2, 4048, 2837, 4], "code_num": [6225, 151, 15157, 9822, 26985, 13818, 19839, 13818, 13893, 18661, 21445, 23971], "code": "string.Format(\"{{ foo: '{0}', bar: '{1}' }}\", foo, bar);", "id": "7114619", "code_sizes": 12}, {"nl_num": [3, 4891, 3154, 5823, 4451, 5459, 6468, 5500, 7400, 4], "code_num": [26309, 30046, 2, 24478, 2, 13818, 2, 13818, 10804, 26309, 12643, 27600, 24541, 24478, 22469, 12643, 6225, 2, 9822, 6225, 2, 18661, 24478, 11846, 8316, 7864, 21691, 15380, 9822, 2, 18661, 21445, 19835, 9822, 24698, 3560, 7864, 23474, 21445, 3560, 30504, 8316, 151, 19823, 21445, 14400, 3560, 18661, 6139, 9822, 4394, 151, 29916, 9822, 8316, 22958, 3560, 9350, 18661, 18661, 24478, 8316, 151, 11557, 9822, 3560, 13818, 11272, 18661, 21445, 14400, 3560, 21445, 10804, 31243, 8316, 151, 13109, 9822, 18661, 21445, 10804, 26309, 12643, 2017, 25121, 9822, 6225, 22958, 9350, 25079, 18661, 24478, 11846, 22613, 7864, 2, 151, 2, 21445, 11846, 28648, 7864, 2, 9822, 22613, 151, 13109, 9822, 18661, 18661, 21445, 10804, 10804, 23971], "code": "public enum NavigationLinks\\n{\\n    SystemDashboard,\\n    TradingDashboard,\\n}\\n\\npublic static class Program\\n{\\n    private static string ToFriendlyName(string defaultName)\\n    {\\n        var sb = new StringBuilder(defaultName);\\n\\n        for (int i = 1; i < sb.Length; ++i)\\n            if (char.IsUpper(sb[i]))\\n            {\\n                sb.Insert(i, ' ');\\n                ++i;\\n            }\\n\\n        return sb.ToString();\\n    }\\n\\n    public static void Main(string[] args)\\n    {\\n        var value = NavigationLinks.SystemDashboard;\\n\\n        var friendlyName = ToFriendlyName(value.ToString());\\n    }\\n}", "id": "10303961", "code_sizes": 115}, {"nl_num": [3, 6813, 5459, 6468, 2848, 2430, 1550, 1850, 4048, 2848, 1550, 1850, 4], "code_num": [2, 151, 2, 7864, 22287, 151, 2, 23971], "code": "staticA.AValue = b.BValue", "id": "1605231", "code_sizes": 8}, {"nl_num": [3, 895, 927, 637, 4652, 2499, 4044, 6464, 2650, 4], "code_num": [22469, 2017, 2, 9822, 6225, 21585, 18661, 24478, 6225, 13553, 7864, 3215, 151, 20004, 9822, 3215, 151, 6368, 151, 12102, 18661, 21445, 6225, 17770, 7864, 27920, 151, 31109, 151, 17828, 151, 72, 9822, 13553, 13818, 21585, 18661, 21445, 8677, 9822, 17308, 2, 7864, 21691, 17308, 9822, 17770, 18661, 18661, 24478, 6225, 29738, 7864, 2, 151, 16584, 9822, 18661, 21445, 10804, 10804, 23971], "code": "private void ReadFromDesktop(string fileName)\\n    {\\n        string desktopPath = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);\\n        string fullName = System.IO.Path.Combine(desktopPath, fileName);\\n        using (StreamReader steamReader = new StreamReader(fullName))\\n        {\\n            string content = steamReader.ReadToEnd();\\n        }\\n    }", "id": "19624731", "code_sizes": 62}, {"nl_num": [3, 895, 2082, 787, 4096, 709, 4048, 3988, 1179, 4], "code_num": [20631, 27208, 7864, 25521, 151, 19424, 21445, 20631, 23720, 7864, 27208, 151, 20570, 9822, 26985, 13818, 27364, 151, 8171, 18661, 21445, 23720, 151, 9886, 9822, 26985, 13818, 23474, 18661, 21445, 23720, 151, 9886, 9822, 26985, 13818, 23474, 18661, 21445, 23971], "code": "RegistryKey currentUser = Registry.CurrentUser;\\nRegistryKey subKey = currentUser.CreateSubKey(\"MyTest\", RegistryKeyPermissionCheck.ReadWriteSubTree);\\nsubKey.SetValue(\"WindowHeight\", 1024);\\nsubKey.SetValue(\"WindowWidth\", 1024);", "id": "4581022", "code_sizes": 40}, {"nl_num": [3, 1352, 2183, 4273, 2660, 3988, 1179, 4048, 2282, 6739, 4372, 4], "code_num": [6269, 2, 7864, 21691, 6269, 9822, 18661, 21445, 2, 151, 28314, 7864, 21691, 9461, 9822, 15146, 151, 314, 18661, 21445, 12603, 151, 18665, 151, 6272, 151, 29165, 9822, 2, 18661, 23971], "code": "TextBlock colorText = new TextBlock();\\ncolortext.Foreground= new SolidColorBrush(Colors.Yellow);\\n\\nthis.Panel.Children.Add(colortext)", "id": "21025021", "code_sizes": 31}, {"nl_num": [3, 895, 2379, 6748, 132, 2848, 6540, 3504, 4048, 6831, 1179, 6404, 4070, 4], "code_num": [27920, 151, 26519, 151, 204, 151, 24288, 9822, 18661, 151, 6184, 23971], "code": "System.Reflection.MethodBase.GetCurrentMethod().Name", "id": "12872596", "code_sizes": 12}, {"nl_num": [3, 5412, 2539, 7086, 2848, 3988, 1179, 4572, 927, 2848, 5066, 4572, 5823, 6674, 5837, 3627, 4], "code_num": [22469, 2017, 2, 9822, 6225, 2, 13818, 6225, 2, 18661, 24478, 15310, 29900, 7864, 20072, 9822, 17379, 13818, 2, 18661, 21445, 320, 9822, 29900, 13818, 2, 18661, 21445, 9858, 9822, 29900, 18661, 21445, 2965, 151, 10909, 9822, 23474, 18661, 21445, 15344, 151, 8292, 9822, 2, 18661, 21445, 10804, 23971], "code": "private void SendKeysToWindow(string WindowName, string KeysToSend)\\n    { \\n        IntPtr hWnd = FindWindow(null, WindowName);            \\n        ShowWindow(hWnd, SW_SHOWNORMAL);\\n        SetForegroundWindow(hWnd);\\n        Thread.Sleep(50);\\n        SendKeys.SendWait(KeysToSend);           \\n    }", "id": "2038730", "code_sizes": 49}, {"nl_num": [3, 1383, 4742, 880, 713, 2, 4], "code_num": [11846, 6799, 7864, 3746, 3245, 6134, 2, 151, 26869, 9822, 18661, 12229, 3245, 151, 353, 30504, 24698, 16682, 9822, 26985, 18661, 28597, 23474, 8024, 9822, 3245, 151, 353, 30504, 6225, 16682, 9822, 26985, 18661, 9776, 26985, 25974, 3245, 151, 353, 30504, 6225, 16682, 9822, 26985, 18661, 9776, 26985, 18661, 28243, 3245, 21445, 23971], "code": "var res = from row in myDTable.AsEnumerable()\\nwhere row.Field<int>(\"EmpID\") == 5 &&\\n(row.Field<string>(\"EmpName\") != \"abc\" ||\\nrow.Field<string>(\"EmpName\") != \"xyz\")\\nselect row;", "id": "9938524", "code_sizes": 53}, {"nl_num": [3, 1215, 7017, 2658, 2853, 4], "code_num": [26309, 20068, 2, 9822, 6225, 6999, 18661, 24478, 11846, 25905, 7864, 21691, 20068, 9822, 21691, 3686, 9822, 26985, 13818, 21691, 16249, 9822, 26985, 13818, 26985, 18661, 13818, 21691, 16249, 9822, 26985, 13818, 26985, 18661, 13818, 21691, 3686, 9822, 26985, 13818, 26985, 18661, 13818, 21691, 3686, 9822, 26985, 13818, 26985, 18661, 13818, 21691, 3686, 9822, 26985, 13818, 26985, 18661, 18661, 18661, 21445, 25905, 151, 27721, 9822, 6999, 18661, 21445, 31243, 25905, 21445, 10804, 23971], "code": "public XDocument NewDocument(string path)\\n{\\n    var doc =\\n        new XDocument(\\n            new XElement(\\n                \"Project\",\\n                new XAttribute(\"version\", \"1.0\"),\\n                new XAttribute(\"authorname\", \"user\"),\\n                new XElement(\"Platform\", \".NET\"),\\n                new XElement(\"Code\", \"codefile.xml\"),\\n                new XElement(\"Canvas\", \"canvas.xml\")));\\n    doc.Save(path);\\n    return doc;\\n}", "id": "6737976", "code_sizes": 73}, {"nl_num": [3, 5729, 4302, 5931, 6404, 3379, 5931, 4], "code_num": [22469, 2017, 23696, 9822, 11968, 26914, 13818, 21166, 17524, 18661, 24478, 6139, 9822, 8097, 151, 17038, 9822, 17524, 151, 1831, 18661, 18661, 6139, 9822, 30998, 151, 27767, 151, 985, 9822, 26985, 13818, 26985, 18661, 151, 985, 9822, 26985, 13818, 26985, 18661, 151, 19823, 12910, 23474, 18661, 17524, 151, 17853, 7864, 9221, 21445, 10804, 23971], "code": "private void textBox1_KeyPress(object sender, KeyPressEventArgs e)\\n{\\n    if(Char.IsNumber(e.KeyChar))\\n        if(textBox1.Text.Replace(\",\", \"\").Replace(\".\", \"\").Length >= 5)\\n            e.Handled = true;\\n}", "id": "15429656", "code_sizes": 54}, {"nl_num": [3, 7274, 673, 5449, 6407, 3934, 2515, 4], "code_num": [6225, 22441, 7864, 19302, 20279, 27705, 13818, 9822, 20279, 7785, 9822, 27705, 18661, 28332, 6198, 29581, 20496, 29581, 151, 19121, 7864, 20958, 151, 31120, 18661, 4479, 2, 28332, 6928, 20958, 19302, 21445, 2, 22958, 9350, 19409, 7864, 12582, 151, 19532, 151, 19391, 30504, 2, 16682, 9822, 22441, 13818, 21691, 11968, 22958, 9350, 24478, 10804, 18661, 151, 12517, 9822, 18661, 21445, 23971], "code": "string query = \"SELECT *, \\n                       (SELECT Count(*) FROM ChildTable c \\n                       WHERE c.ParentId = p.Id) as NumberOfVotes\\n                FROM ParentTable p\";\\n\\nRowShape[] rows = ctx.Database.SqlQuery<RowShape>(query, new object[] { }).ToArray();", "id": "28573784", "code_sizes": 61}, {"nl_num": [3, 895, 927, 4935, 2430, 5823, 946, 1942, 7086, 2848, 2837, 4048, 3988, 1179, 4], "code_num": [6225, 12494, 7864, 26985, 21445, 6225, 11992, 7864, 2955, 151, 985, 9822, 12494, 13818, 26985, 13818, 26985, 18661, 21445, 23971], "code": "string input = \"AB ?? CD\";\\nstring result = Regex.Replace(input, \"[^\\x0d\\x0a\\x20-\\x7e\\t]\", \"\");", "id": "3698885", "code_sizes": 20}, {"nl_num": [3, 895, 927, 1203, 6528, 2173, 6620, 6364, 880, 4048, 2848, 4407, 3627, 4], "code_num": [2, 22958, 9350, 18859, 7864, 7286, 151, 12420, 9822, 4549, 9822, 2, 18661, 18661, 21445, 18044, 9822, 2, 2, 6134, 18859, 18661, 24478, 26038, 7406, 7864, 26038, 151, 2, 9822, 2, 18661, 21445, 17571, 17341, 7864, 21691, 17571, 9822, 18661, 21445, 17341, 151, 28253, 7864, 7406, 151, 13109, 9822, 18661, 21445, 17341, 151, 26038, 7864, 7406, 21445, 3431, 151, 5997, 151, 29165, 9822, 17341, 18661, 21445, 10804, 23971], "code": "KnownColor[] colors  = Enum.GetValues(typeof(KnownColor));\\nforeach(KnownColor knowColor in colors)\\n{\\n  Color color = Color.FromKnownColor(knowColor);\\n\\n    ListBoxItem listItem = new ListBoxItem();\\n    listItem.Content = color.ToString();\\n    listItem.Color = color ;\\n    listbox1.Items.Add(listItem);\\n}", "id": "12718754", "code_sizes": 68}, {"nl_num": [3, 1874, 2173, 7258, 4048, 2173, 3616, 2, 4], "code_num": [12485, 151, 2, 7864, 26985, 21445, 23971], "code": "scheduler.Initialview=\"viewname\";", "id": "17545064", "code_sizes": 7}, {"nl_num": [3, 4288, 6464, 781, 76, 880, 3238, 6794, 4048, 3988, 1179, 4], "code_num": [2017, 25121, 9822, 18661, 24478, 6225, 30560, 7864, 5540, 151, 6916, 9822, 26985, 18661, 21445, 24698, 22811, 7864, 23474, 21445, 30560, 7864, 9822, 2955, 151, 985, 9822, 30560, 13818, 26985, 13818, 12835, 9822, 20494, 28427, 18661, 24478, 31243, 26985, 5013, 22811, 14400, 21445, 10804, 18661, 18661, 21445, 5540, 151, 21086, 9822, 26985, 13818, 30560, 18661, 21445, 10804, 23971], "code": "void Main() {\\n\\n    string text = File.ReadAllText(@\"T:\\File1.txt\");\\n    int num = 0;\\n\\n    text = (Regex.Replace(text, \"map\", delegate(Match m) {\\n        return \"map\" + num++;\\n    }));\\n\\n    File.WriteAllText(@\"T:\\File1.txt\", text);\\n}", "id": "22541429", "code_sizes": 58}, {"nl_num": [3, 5753, 2, 927, 2848, 6858, 2512, 4048, 6831, 1179, 4], "code_num": [15898, 30712, 7864, 21691, 15898, 9822, 18661, 21445, 30712, 151, 10755, 151, 435, 9822, 18661, 21445, 18044, 9822, 6225, 2, 6134, 20033, 151, 30077, 18661, 24478, 30678, 30077, 7864, 21691, 30678, 9822, 18661, 21445, 30077, 151, 27767, 7864, 2, 21445, 30712, 151, 10755, 151, 29165, 9822, 2, 18661, 21445, 18044, 9822, 6225, 2, 6134, 20033, 151, 4142, 18661, 24478, 30678, 4142, 7864, 21691, 30678, 9822, 18661, 21445, 4142, 151, 27767, 7864, 2, 21445, 30077, 151, 10755, 151, 29165, 9822, 4142, 18661, 21445, 10804, 10804, 23971], "code": "TreeView myTreeView = new TreeView();\\nmyTreeView.Nodes.Clear();\\nforeach (string parentText in xml.parent)\\n{\\n   TreeNode parent = new TreeNode();\\n   parent.Text = parentText;\\n   myTreeView.Nodes.Add(treeNodeDivisions);\\n\\n   foreach (string childText in xml.child)\\n   {\\n      TreeNode child = new TreeNode();\\n      child.Text = childText;\\n      parent.Nodes.Add(child);\\n   }\\n}", "id": "5326411", "code_sizes": 85}, {"nl_num": [3, 2855, 3610, 552, 7086, 2848, 290, 6055, 4652, 2342, 4134, 4], "code_num": [8677, 27920, 151, 6437, 21445, 11320, 11227, 7864, 21691, 11320, 9822, 18661, 21445, 11227, 151, 5639, 9822, 26985, 13818, 26985, 18661, 21445, 11846, 2, 7864, 27920, 151, 31109, 151, 5540, 151, 6916, 9822, 26985, 18661, 21445, 11846, 2, 7864, 2, 151, 22006, 9822, 11272, 18661, 21445, 8677, 9822, 20915, 16397, 7864, 21691, 20915, 9822, 2, 18661, 18661, 24478, 16397, 151, 19138, 9822, 18661, 21445, 18044, 9822, 11846, 12570, 6134, 2, 18661, 24478, 12740, 20597, 7864, 21691, 12740, 9822, 12570, 13818, 16397, 18661, 21445, 20597, 151, 21376, 9822, 18661, 21445, 10804, 10804, 23971], "code": "using System.Net;\\n\\n//Download\\nWebClient Client = new WebClient ();\\nClient.DownloadFile(\"http://ts1.travian.com/map.sql\", @\"C:\\folder\\file.sql\");\\n\\n// Read into a file\\nvar sqltext = System.IO.File.ReadAllText(@\"c:\\folder\\file.sql\");\\n// Split the sql statements up\\nvar sqlStatements = sqltext.Split(';'); \\n\\n// Insert\\nusing (SqlConnection connection = new SqlConnection(connectionParameters))\\n    {   \\n        connection.Open();\\n        foreach (var sqlStatement in sqlStatements)  \\n        {\\n            SqlCommand command = new SqlCommand(sqlStatement, connection);\\n            command.ExecuteNonQuery();\\n        }\\n    }", "id": "13502616", "code_sizes": 92}, {"nl_num": [3, 89, 4451, 6908, 2549, 6268, 4935, 6528, 2837, 4048, 3988, 1179, 4], "code_num": [12494, 7864, 2955, 151, 985, 9822, 12494, 13818, 26985, 13818, 6225, 151, 20130, 18661, 21445, 23971], "code": "input = Regex.Replace(input, \"[^0-9]+\", string.Empty);", "id": "6361986", "code_sizes": 16}, {"nl_num": [3, 6697, 2848, 4652, 3065, 1314, 2029, 1486, 4], "code_num": [8677, 9822, 11846, 21248, 7864, 21691, 29094, 9822, 6999, 13818, 28213, 151, 19138, 13818, 21544, 151, 16221, 13818, 8478, 151, 4779, 18661, 18661, 8677, 9822, 11846, 8305, 7864, 21691, 17308, 9822, 21248, 13818, 7953, 151, 8279, 18661, 18661, 24478, 10804, 23971], "code": "using (var fs = new FileStream(path, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))\\nusing (var sr = new StreamReader(fs, Encoding.Default)) {\\n    // read the stream\\n    //...\\n}", "id": "9759697", "code_sizes": 41}, {"nl_num": [3, 6046, 2848, 5459, 3471, 6464, 2029, 5459, 4048, 2848, 1345, 5151, 4], "code_num": [2, 7864, 9822, 330, 18661, 9822, 29331, 151, 27292, 28597, 26985, 25740, 23474, 12527, 23474, 18661, 23971], "code": "SomeByte = (byte)(x.SomeField==\"test\"?1:0)", "id": "16320243", "code_sizes": 17}, {"nl_num": [3, 4481, 6773, 6784, 4], "code_num": [8677, 27920, 151, 1834, 151, 27767, 21445, 2, 2, 7864, 21691, 2, 9822, 18661, 21445, 18044, 9822, 7217, 21257, 6134, 2, 151, 8976, 18661, 23282, 151, 5997, 151, 29165, 9822, 21257, 151, 6184, 18661, 21445, 10804, 23971], "code": "using System.Drawing.Text;\\n\\nInstalledFontCollection myFonts = new InstalledFontCollection();\\nforeach (FontFamily ff in myFonts.Families)\\n  comboBox1.Items.Add(ff.Name);\\n}", "id": "7897699", "code_sizes": 37}, {"nl_num": [3, 895, 927, 1279, 5642, 5931, 6468, 3081, 2660, 2866, 6831, 1179, 3188, 4], "code_num": [18, 6225, 2, 7864, 26985, 21445, 6225, 25388, 7864, 15163, 151, 15978, 9822, 13693, 151, 22664, 9822, 26985, 18661, 18661, 151, 16029, 9822, 26985, 18661, 21445, 24698, 4759, 7864, 3115, 151, 20118, 9822, 2955, 151, 20494, 9822, 25388, 13818, 26985, 18661, 151, 13109, 9822, 18661, 151, 985, 9822, 26985, 13818, 26985, 18661, 18661, 21445, 6225, 2, 7864, 2, 22958, 4759, 22786, 23474, 9350, 151, 13109, 9822, 18661, 21445, 15163, 151, 15978, 9822, 13693, 151, 22664, 9822, 26985, 18661, 18661, 151, 15344, 9822, 2, 18661, 21445, 23971], "code": "//Your password string\\nconst string testPassword = \"TestPassword\";\\n//find the id attribute that contains the index of character needs to be input\\nstring str= driver.FindElement(By.CssSelector(\"input[id^='edit-password-challenge']\")).GetAttribute(\"id\");\\n//find the index of the char\\nint index = Convert.ToInt16(Regex.Match(str, \"[0-9]+\").ToString().Replace(\"\\\"\", \"\"));\\n//find the char and convert to string so that can be used with SendKeys() method\\nstring charToInput = testPassword[index-1].ToString();\\n\\n//input the password using the SendKeys() method\\ndriver.FindElement(By.CssSelector(\"the selector\")).SendKeys(charToInput);", "id": "31255115", "code_sizes": 86}, {"nl_num": [3, 895, 927, 7085, 4354, 880, 4346, 3627, 4], "code_num": [11846, 2, 7864, 21691, 30238, 30504, 29330, 16682, 9822, 18661, 21445, 18044, 9822, 11846, 2, 6134, 30998, 151, 27767, 151, 22006, 9822, 11272, 18661, 18661, 24478, 29330, 18245, 21445, 6139, 9822, 29330, 151, 14076, 9822, 2, 13818, 19515, 18245, 18661, 18661, 2, 151, 29165, 9822, 18245, 18661, 21445, 10804, 23971], "code": "var myDoubleList = new List<double>();\\nforeach(var doubleString in textBox1.Text.Split(' '))\\n{\\n    double myDouble;\\n    if (double.TryParse(doubleString, out myDouble))\\n        myDoubleList.Add(myDouble);    \\n}", "id": "7436400", "code_sizes": 50}, {"nl_num": [3, 3988, 1179, 5100, 2, 5823, 386, 2, 1542, 822, 1017, 880, 2, 4], "code_num": [16172, 7864, 6255, 151, 10863, 9822, 21059, 13818, 21059, 13818, 21059, 18661, 27705, 6255, 151, 12564, 9822, 23474, 13818, 23474, 13818, 23474, 18661, 27705, 6255, 151, 2, 9822, 24524, 18661, 27705, 6255, 151, 12564, 9822, 30628, 18661, 27705, 6255, 151, 2, 9822, 2, 18661, 21445, 16172, 8859, 6255, 151, 12564, 9822, 30077, 151, 2, 9822, 18661, 18661, 21445, 23971], "code": "world = Matrix.CreateScale(size,size,size)\\n        * Matrix.CreateTranslation(0,0,0) \\n        * Matrix.CreateRotationY(rotation)\\n        * Matrix.CreateTranslation(position)\\n        * Matrix.CreateRotationY(revolution); \\n\\nworld *= Matrix.CreateTranslation( parent.getPosition() );", "id": "6189782", "code_sizes": 59}, {"nl_num": [3, 3988, 1179, 5823, 5149, 74, 6974, 4048, 2848, 6525, 4], "code_num": [26309, 15697, 7613, 9822, 6225, 18991, 18661, 24478, 24459, 24478, 8677, 9822, 5540, 151, 19138, 9822, 18991, 13818, 28213, 151, 19138, 18661, 18661, 24478, 10804, 10804, 26756, 9822, 24196, 17524, 18661, 24478, 2, 9221, 21445, 10804, 31243, 884, 21445, 10804, 23971], "code": "public bool IsFileLocked(string filePath)\\n{\\n    try\\n    {\\n        using (File.Open(filePath, FileMode.Open)){}\\n    }\\n    catch (IOException e)\\n    {\\n        retturn true;\\n    }  \\n\\n    return false;\\n}", "id": "24082445", "code_sizes": 41}, {"nl_num": [3, 895, 2082, 6748, 4056, 2848, 1850, 2, 4], "code_num": [27600, 2, 12527, 26285, 30504, 24698, 16682, 24478, 22469, 24698, 2, 7864, 23474, 21445, 22469, 24698, 2, 7864, 23474, 21445, 22469, 24698, 2, 7864, 23474, 21445, 22469, 24698, 2, 7864, 23474, 21445, 26309, 25820, 30504, 24698, 16682, 6827, 9822, 18661, 24478, 14150, 31243, 2, 21445, 14150, 31243, 2, 21445, 14150, 31243, 2, 21445, 14150, 31243, 2, 21445, 10804, 25820, 26285, 151, 6827, 9822, 18661, 24478, 31243, 6827, 9822, 18661, 21445, 10804, 10804, 23971], "code": "class csWordSimilarity : IEnumerable<int>\\n{\\n    private int _var1 = 1;\\n    private int _var2 = 1;\\n    private int _var3 = 1;\\n    private int _var4 = 1;\\n\\n    public IEnumerator<int> GetEnumerator()\\n    {\\n        yield return _var1;\\n        yield return _var2;\\n        yield return _var3;\\n        yield return _var4;\\n    }\\n\\n    IEnumerator IEnumerable.GetEnumerator()\\n    {\\n        return GetEnumerator();\\n    }\\n}", "id": "9455043", "code_sizes": 73}, {"nl_num": [3, 6215, 6550, 7086, 6339, 927, 4174, 3627, 4096, 896, 5530, 5144, 1283, 3472, 290, 3530, 5475, 3627, 4], "code_num": [14865, 151, 12005, 22958, 27845, 9350, 151, 10124, 23971], "code": "dataGridView1.Columns[X].HeaderText", "id": "9615661", "code_sizes": 9}, {"nl_num": [3, 5829, 1833, 927, 619, 896, 4985, 4048, 3988, 1179, 4], "code_num": [24698, 22811, 7864, 23474, 21445, 24698, 2, 7864, 23474, 27705, 9822, 22811, 9199, 23474, 18661, 5013, 9822, 22811, 14471, 23474, 18661, 21445, 23971], "code": "int num = 45;\\nint bcdNum = 16*(num/10)+(num%10);", "id": "11794146", "code_sizes": 23}, {"nl_num": [3, 2282, 2, 5823, 6666, 5409, 3959, 4], "code_num": [8677, 27920, 21445, 8677, 27920, 151, 13475, 151, 25723, 21445, 8677, 27920, 151, 29991, 151, 16741, 21445, 27600, 2, 12527, 29518, 24478, 21820, 26416, 2017, 6568, 9822, 16987, 17524, 18661, 24478, 21290, 151, 6568, 9822, 17524, 18661, 21445, 6139, 9822, 3215, 151, 31135, 151, 29670, 151, 22179, 12910, 23474, 18661, 24478, 31369, 9822, 12603, 151, 27961, 13818, 26985, 13818, 26985, 18661, 21445, 10804, 10804, 22958, 10034, 9822, 26985, 18661, 9350, 22469, 12643, 8445, 24698, 31369, 9822, 15310, 29900, 13818, 6225, 19685, 13818, 6225, 13505, 18661, 21445, 10804, 23971], "code": "using System;\\nusing System.Windows.Forms;\\nusing System.Runtime.InteropServices;\\n\\nclass SimpleProgressBar : ProgressBar {\\n    protected override void OnHandleCreated(EventArgs e) {\\n        base.OnHandleCreated(e);\\n        if (Environment.OSVersion.Version.Major >= 6) {\\n            SetWindowTheme(this.Handle, \"\", \"\");\\n        }\\n    }\\n    [DllImport(\"uxtheme.dll\")]\\n    private static extern int SetWindowTheme(IntPtr hWnd, string appname, string idlist);\\n}", "id": "3893622", "code_sizes": 88}, {"nl_num": [3, 895, 927, 3774, 2848, 911, 6044, 4048, 4122, 4], "code_num": [22650, 151, 22327, 23971], "code": "WebRequest.Create", "id": "12880009", "code_sizes": 4}, {"nl_num": [3, 6582, 5159, 4174, 6074, 2660, 734, 4], "code_num": [11846, 29907, 7864, 21691, 11864, 9822, 26985, 18661, 21445, 11846, 25234, 7864, 29907, 151, 25326, 9822, 18661, 151, 27932, 9822, 18661, 21445, 11846, 7458, 7864, 25234, 22958, 26985, 9350, 21445, 23971], "code": "var excel = new ExcelQueryFactory(\"excelFileName\");\\nvar firstRow = excel.Worksheet().First();\\nvar companyName = firstRow[\"CompanyName\"];", "id": "21684773", "code_sizes": 31}, {"nl_num": [3, 4000, 5794, 4083, 6268, 365, 357, 3935, 3827, 89, 2379, 787, 4919, 6528, 3935, 407, 2848, 2080, 3627, 4], "code_num": [19835, 3560, 7864, 2, 18774, 2, 19835, 25672, 7864, 2, 18774, 2, 26703, 22958, 3560, 13818, 25672, 9350, 18774, 19227, 7469, 21784, 8227, 16897, 23971], "code": "for i = left_edge to right_edge\\n    for j = top_edge to bottom_edge\\n        add [i, j] to list of points inside rectangle", "id": "16154809", "code_sizes": 25}]